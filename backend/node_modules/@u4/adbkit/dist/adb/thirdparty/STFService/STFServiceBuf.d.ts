import { Buffer } from 'node:buffer';
import { Message, Root } from 'protobufjs';
import * as STF from './STFServiceModel.js';
export type MyMessage<T extends object = object> = Message<T> & T;
export default class STFServiceBuf {
    private _root;
    private static internalInit;
    static get(): Promise<STFServiceBuf>;
    private constructor();
    get root(): Root;
    readEnvelope(data: Uint8Array): MyMessage<STF.Envelope>;
    readEnvelopeDelimited(data: Uint8Array): MyMessage<STF.Envelope>;
    write: {
        Envelope(env: STF.Envelope): Buffer;
        GetVersionRequest(req: STF.GetVersionRequest): Buffer;
        SetKeyguardStateRequest(req: STF.SetKeyguardStateRequest): Buffer;
        SetWakeLockRequest(req: STF.SetWakeLockRequest): Buffer;
        SetClipboardRequest(req: STF.SetClipboardRequest): Buffer;
        GetClipboardRequest(req: STF.GetClipboardRequest): Buffer;
        GetBrowsersRequest(req: STF.GetBrowsersRequest): Buffer;
        GetDisplayRequest(req: STF.GetDisplayRequest): Buffer;
        GetPropertiesRequest(req: STF.GetPropertiesRequest): Buffer;
        DoIdentifyRequest(req: STF.DoIdentifyRequest): Buffer;
        GetAccountsRequest(req: STF.GetAccountsRequest): Buffer;
        DoAddAccountMenuRequest(req: STF.DoAddAccountMenuRequest): Buffer;
        DoRemoveAccountRequest(req: STF.DoRemoveAccountRequest): Buffer;
        SetRingerModeRequest(req: STF.SetRingerModeRequest): Buffer;
        GetRingerModeRequest(req: STF.GetRingerModeRequest): Buffer;
        SetWifiEnabledRequest(req: STF.SetWifiEnabledRequest): Buffer;
        GetWifiStatusRequest(req: STF.GetWifiStatusRequest): Buffer;
        GetRootStatusRequest(req: STF.GetRootStatusRequest): Buffer;
        SetBluetoothEnabledRequest(req: STF.SetBluetoothEnabledRequest): Buffer;
        GetBluetoothStatusRequest(req: STF.GetBluetoothStatusRequest): Buffer;
        GetSdStatusRequest(req: STF.GetSdStatusRequest): Buffer;
        SetMasterMuteRequest(req: STF.SetMasterMuteRequest): Buffer;
        KeyEventRequest(req: STF.KeyEventRequest): Buffer;
        DoTypeRequest(req: STF.DoTypeRequest): Buffer;
        SetRotationRequest(req: STF.SetRotationRequest): Buffer;
        DoWakeRequest(req: STF.DoWakeRequest): Buffer;
    };
    read: {
        Envelope(data: Uint8Array): MyMessage<STF.Envelope>;
        AirplaneModeEvent(data: Uint8Array): MyMessage<STF.AirplaneModeEvent>;
        BatteryEvent(data: Uint8Array): MyMessage<STF.BatteryEvent>;
        BrowserApp(data: Uint8Array): MyMessage<STF.BrowserApp>;
        BrowserPackageEvent(data: Uint8Array): MyMessage<STF.BrowserPackageEvent>;
        ConnectivityEvent(data: Uint8Array): MyMessage<STF.ConnectivityEvent>;
        PhoneStateEvent(data: Uint8Array): MyMessage<STF.PhoneStateEvent>;
        RotationEvent(data: Uint8Array): MyMessage<STF.RotationEvent>;
        GetVersionResponse(data: Uint8Array): MyMessage<STF.GetVersionResponse>;
        SetKeyguardStateResponse(data: Uint8Array): MyMessage<STF.SetKeyguardStateResponse>;
        SetWakeLockResponse(data: Uint8Array): MyMessage<STF.SetWakeLockResponse>;
        SetClipboardResponse(data: Uint8Array): MyMessage<STF.SetClipboardResponse>;
        GetClipboardResponse(data: Uint8Array): MyMessage<STF.GetClipboardResponse>;
        GetBrowsersResponse(data: Uint8Array): MyMessage<STF.GetBrowsersResponse>;
        GetDisplayResponse(data: Uint8Array): MyMessage<STF.GetDisplayResponse>;
        Property(data: Uint8Array): MyMessage<STF.Property>;
        GetPropertiesResponse(data: Uint8Array): MyMessage<STF.GetPropertiesResponse>;
        DoIdentifyResponse(data: Uint8Array): MyMessage<STF.DoIdentifyResponse>;
        GetAccountsResponse(data: Uint8Array): MyMessage<STF.GetAccountsResponse>;
        DoAddAccountMenuResponse(data: Uint8Array): MyMessage<STF.DoAddAccountMenuResponse>;
        DoRemoveAccountResponse(data: Uint8Array): MyMessage<STF.DoRemoveAccountResponse>;
        SetRingerModeResponse(data: Uint8Array): MyMessage<STF.SetRingerModeResponse>;
        GetRingerModeResponse(data: Uint8Array): MyMessage<STF.GetRingerModeResponse>;
        SetWifiEnabledResponse(data: Uint8Array): MyMessage<STF.SetWifiEnabledResponse>;
        GetWifiStatusResponse(data: Uint8Array): MyMessage<STF.GetWifiStatusResponse>;
        GetRootStatusResponse(data: Uint8Array): MyMessage<STF.GetRootStatusResponse>;
        SetBluetoothEnabledResponse(data: Uint8Array): MyMessage<STF.SetBluetoothEnabledResponse>;
        GetBluetoothStatusResponse(data: Uint8Array): MyMessage<STF.GetBluetoothStatusResponse>;
        GetSdStatusResponse(data: Uint8Array): MyMessage<STF.GetSdStatusResponse>;
        SetMasterMuteResponse(data: Uint8Array): MyMessage<STF.SetMasterMuteResponse>;
    };
}
//# sourceMappingURL=STFServiceBuf.d.ts.map