import DeviceClient from "./DeviceClient.js";
import { type KeyCodes } from "./keycode.js";
export default class DeviceClientExtra {
    private deviceClient;
    constructor(deviceClient: DeviceClient);
    /**
     * rootless version of enable usb tethering
     * Depends of phone language will fail with non latin language.
     * @param enable
     */
    usbTethering(enable: boolean): Promise<boolean>;
    /**
     * rootless version of enable air plain mode
     * Depends of phone language will fail with non latin language.
     * @param enable expected final stat for airplain mode
     * @param twiceMs if > 0 will switch airplan mode 2 time to match expected state
     */
    airPlainMode(enable: boolean, twiceMs?: number): Promise<boolean>;
    /**
     * enable / disable
     * type: bluetooth / data/ wifi
     */
    setSvc(type: 'bluetooth' | 'data' | 'wifi', enable: boolean): Promise<string>;
    /**
     * Tap on screen
     * @param x1
     * @param y1
     * @returns
     */
    tap(x1: string, y1: string): Promise<string>;
    /**
     * Tap a keyCode
     * @param key
     * @returns
     */
    keyCode(key: KeyCodes): Promise<string>;
    /**
     * press the back button
     * @returns
     */
    back(): Promise<string>;
}
//# sourceMappingURL=DeviceClientExtra.d.ts.map